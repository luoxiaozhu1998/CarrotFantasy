using System.Collections.Generic;using Manager.MonoManager;using UnityEngine;namespace Factory{    public class BaseFactory : IBaseFactory    {        /// <summary>        /// UI/UIPanel/Game 是资源        /// </summary>        protected readonly Dictionary<string, GameObject> FactoryDict = new();        /// <summary>        /// 对象池字典        /// </summary>        protected readonly Dictionary<string, Stack<GameObject>> ObjectPoolDict = new();        protected string LoadPath;        public BaseFactory()        {            LoadPath = "Prefabs/";        }        /// <summary>        /// 取实例        /// </summary>        /// <param name="itemName">名字</param>        /// <returns></returns>        public GameObject GetItem(string itemName)        {            GameObject itemGo;            if (ObjectPoolDict.ContainsKey(itemName))            {                if (ObjectPoolDict[itemName].Count==0)                {                    GameObject go = GetResource(itemName);                    itemGo = GameManager.instance.CreateItem(go);                }                else                {                    itemGo = ObjectPoolDict[itemName].Pop();                    itemGo.SetActive(true);                }            }            else            {                ObjectPoolDict.Add(itemName, new Stack<GameObject>());                var go = GetResource(itemName);                itemGo = GameManager.instance.CreateItem(go);            }            if (itemGo == null)            {                Debug.Log(itemName + "获取失败");            }            return itemGo;        }        /// <summary>        /// 放入池子的方法        /// </summary>        /// <param name="itemName">物体名字</param>        /// <param name="item">物体对象</param>        public void PushItem(string itemName, GameObject item)        {            item.SetActive(false);            item.transform.SetParent(GameManager.instance.transform);            if (ObjectPoolDict.ContainsKey(itemName))            {                ObjectPoolDict[itemName].Push(item);            }            else            {                Debug.Log("当前字典没有" + itemName + "对象池");            }        }        private GameObject GetResource(string itemName)        {            GameObject itemGo;            var itemLoadPath = LoadPath + itemName;            if (FactoryDict.ContainsKey(itemName))            {                itemGo = FactoryDict[itemName];            }            else            {                itemGo = Resources.Load<GameObject>(itemLoadPath);                FactoryDict.Add(itemName, itemGo);            }            if (itemGo != null) return itemGo;            Debug.Log(itemName + "的资源获取失败");            Debug.Log("失败路径" + itemLoadPath);            return itemGo;        }    }}